FORUM
    [DB]
        - Implement password encyrption
        - Add sorting
        - Implement CRUD operations in some sort of real DB system
            probably mongoDB
            
    [Flask]
        - Implement user authentication system
            Consider SSL connection.
        - Implement user authentication system to operations that need it
        - Impement user authorizaiton
            Operations yields differing result depending on the current logged in user
            Some operation may require additional login despite already logged in, e.g. password reset.
        - Implement sanitization mechanism for incoming data
        - stop returning the saerch results directly; carefully select which information to disclose and which not to
        - Handle entities inside the app as separate class instead of bare dictionary
        - Consider using Flask-Session for server-side session management
        - Consider CORS restriction from frontend-to-backend during development
    
    [Frontend]
        - Create a simple page to signup user
        - Create a simple page to write posts
        - Figure out routing of SPA that utilizes HTML5 history
            https://github.com/ReactTraining/react-router/blob/master/FAQ.md#how-do-i-access-the-history-object-outside-of-components
            https://codeburst.io/full-stack-single-page-application-with-vue-js-and-flask-b1e036315532

    [Deployment]
        - Deploy on amazon
            Figure out how to import secrets in the app.
        - Try using docker
        

    [TESTING]
        - figure out how to test session with flask
        - figure out how to configure CI testing with DB dependency
        - figure out how to automate client side testing which requires
            launching the backend