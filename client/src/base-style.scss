@use "sass:map";

// defines base styles to be referenced by other styles
$color-palette: (
    '00': rgb(50, 50, 50),
    '01': rgb(220, 220, 220),
    '02': rgb(220, 150, 50),
    '99': red,
);

// @mixin create-shades($name, $color-idx) {
//     $base-color: map-get($color-palette, $color-idx);
//     #{$name}: $base-color;

//     @for $i from 1 through 3 {
//         #{$name}-light$i: lighten($base-color, #{$i*10%});
//         #{$name}-dark$i: darken($base-color, #{$i*10%});
//     }
// }

$colors: (
    'primary': map-get($color-palette, '00'),
    'primary-light1': lighten( map-get($color-palette, '00'), 10%),
    'primary-light2': lighten( map-get($color-palette, '00'), 20%),
    'primary-light3': lighten( map-get($color-palette, '00'), 30%),
    'primary-dark1': darken( map-get($color-palette, '00'), 10%),
    'primary-dark2': darken( map-get($color-palette, '00'), 20%),
    'primary-dark3': darken( map-get($color-palette, '00'), 30%),

    'secondary': map-get($color-palette, '01'),
    'secondary-light1': lighten( map-get($color-palette, '01'), 10%),
    'secondary-light2': lighten( map-get($color-palette, '01'), 20%),
    'secondary-light3': lighten( map-get($color-palette, '01'), 30%),
    'secondary-dark1': darken( map-get($color-palette, '01'), 10%),
    'secondary-dark2': darken( map-get($color-palette, '01'), 20%),
    'secondary-dark3': darken( map-get($color-palette, '01'), 30%),

    'highlight': map-get($color-palette, '02'),

    'warning': map-get($color-palette, '99'),
    'warning-light1': lighten( map-get($color-palette, '99'), 10%),
    'warning-light2': lighten( map-get($color-palette, '99'), 20%),
    'warning-light3': lighten( map-get($color-palette, '99'), 30%),
    'warning-dark1': darken( map-get($color-palette, '99'), 10%),
    'warning-dark2': darken( map-get($color-palette, '99'), 20%),
    'warning-dark3': darken( map-get($color-palette, '99'), 30%),
);

$font-size: (
    'header': 40px,
    'large': 20px,
    'medium': 14px,
    'small': 12px,
);

$spaces: (
    'xlarge': 80px,
    'large': 40px,
    'medium': 20px,
    'small': 10px,
);

$dimensions: (
    'header-height': 40px,
    'header-margin-h': 100px,
    'header-portrait-size': 32px,
    // 'header-dropdown-width': 200px,
    'footer-height': 40px,
    'main-content-width': 1200px,
    'block-text-height': 2em,

    'form-input-height': 40px,
    'form-input-width': 400px,
    'form-button-height': 40px,
    'form-button-width': 195px,

    'pagination-text-width': 300px,
    'thread-card-views-width': 150px,
    'thread-card-lastpost-width': 300px,
    
    'post-card-min-height': 240px,
    'post-card-portrait-size': 64px,
    'post-card-header-postnum-width': 40px,

    'spinner-size': 100px,

    'user-profile-button-width': 80px,
);

$general-styling: (
    'border-radius-form': 7px,
    'border-radius-button': 7px,
    'border-radius-card': 10px,
    'border-radius-textbox': 7px,
);

/* Rules for sizing the icon. */
.material-icons.md-18 { font-size: 18px; }
.material-icons.md-24 { font-size: 24px; }
.material-icons.md-36 { font-size: 36px; }
.material-icons.md-48 { font-size: 48px; }

// prevents elements and subelements to be selectable and highlighted
.noselect {
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

// mixins
@mixin centralize-in-page {
    margin: auto;
    width: 80%;
}

@mixin centerize {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}
